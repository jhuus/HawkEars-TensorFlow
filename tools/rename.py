# Rename image files generated by dbsearch.py or cluster.py, by deleting the sort number prefix
# and the distance suffix so they are in the form expected by extract.py.
# For instance, rename "8-XC424794-4.28-0.358.png" (from dbsearch.py) to "XC424794-4.28.png".
# Or rename "8-XC424794-4.28.png" (from cluster.py) to "XC424794-4.28.png".

import argparse
import inspect
import os
import sys

# this is necessary before importing from a peer directory
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)

from core import util

class Main:
    def __init__(self, path):
        self.path = path

    def run(self):
        for file_name in os.listdir(self.path):
            file_path = os.path.join(self.path, file_name)
            if os.path.isfile(file_path):
                base_name = os.path.basename(file_path)
                _, ext = os.path.splitext(file_name)
                if ext.lower() == '.png':
                    base_name = base_name[:-4]
                    tokens = base_name.split('~')
                    if len(tokens) <= 1:
                        continue

                    new_base_name = tokens[1]
                    new_file_path = os.path.join(self.path, new_base_name + ext)
                    print(f'"{file_path}" -> "{new_file_path}"')
                    os.rename(file_path, new_file_path)

if __name__ == '__main__':
    # command-line arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', type=str, default='', help='Path to directory containing image files.')
    args = parser.parse_args()

    Main(args.d).run()
